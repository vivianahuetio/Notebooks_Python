{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vivianahuetio/Notebooks_Python/blob/main/NB_03-Estructuras_de_datos.ipyn\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P9N-FkM8QrrJ"
      },
      "source": [
        "## Estructuras de Datos"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "foJeGrv_QrrN"
      },
      "source": [
        "1) Crear una lista que contenga nombres de ciudades del mundo que contenga más de 5 elementos e imprimir por pantalla"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "91AadZuGQrrO",
        "outputId": "403e8be0-a111-4670-cfa2-b755c2a45abc"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Buenos Aires', 'Brasilia', 'Asunción', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá']\n"
          ]
        }
      ],
      "source": [
        "lis = ['Buenos Aires','Brasilia','Asunción','Montevideo','Santiago','Lima','Caracas','Bogotá']\n",
        "print(lis)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l8FeaRCYQrrQ"
      },
      "source": [
        "2) Imprimir por pantalla el segundo elemento de la lista"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3txfeK45QrrR",
        "outputId": "694a1ccf-effb-4fd4-d567-901f8b17bd9e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Brasilia\n"
          ]
        }
      ],
      "source": [
        "print(lis[1])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CKFYPHCYQrrS"
      },
      "source": [
        "3) Imprimir por pantalla del segundo al cuarto elemento"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jOuP9d-eQrrS",
        "outputId": "6de74552-593b-401c-c4e1-1ec140506bab"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Brasilia', 'Asunción', 'Montevideo']\n"
          ]
        }
      ],
      "source": [
        "print(lis[1:4])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tvFfwGP_QrrT"
      },
      "source": [
        "4) Visualizar el tipo de dato de la lista"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "267KTMwmQrrT",
        "outputId": "f5f2b243-8662-4f9a-de60-b4e22755a0d2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'list'>\n"
          ]
        }
      ],
      "source": [
        "print(type(lis))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tdtrBNRlQrrU"
      },
      "source": [
        "5) Visualizar todos los elementos de la lista a partir del tercero de manera genérica, es decir, sin explicitar la posición del último elemento"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nhev72svQrrV",
        "outputId": "0153ee23-72ab-4345-bf82-15a98c828c79"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Asunción', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá']\n"
          ]
        }
      ],
      "source": [
        "print(lis[2:])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MTdRCrG8QrrV"
      },
      "source": [
        "6) Visualizar los primeros 4 elementos de la lista"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "n1gMCMxWQrrW",
        "outputId": "7211cdaf-4766-48a9-e2fc-0500c82807f3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Buenos Aires', 'Brasilia', 'Asunción', 'Montevideo']\n"
          ]
        }
      ],
      "source": [
        "print(lis[:4])\n",
        "    "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "phXuQ-LUQrrX"
      },
      "source": [
        "7) Agregar una ciudad más a la lista que ya exista y otra que no ¿Arroja algún tipo de error?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1tB55ywaQrrX"
      },
      "outputs": [],
      "source": [
        "lis.append('Ciudad de Méjico')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "MsgRNiHhQrrY"
      },
      "outputs": [],
      "source": [
        "lis.append('Montevideo')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Go0-YqKZQrrY",
        "outputId": "fd88764a-996a-442b-fd02-cf3a8239927a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Buenos Aires', 'Brasilia', 'Asunción', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo']\n"
          ]
        }
      ],
      "source": [
        "print(lis)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A1JsLEraQrrZ"
      },
      "source": [
        "8) Agregar otra ciudad, pero en la cuarta posición"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qKDsYBJoQrrZ"
      },
      "outputs": [],
      "source": [
        "lis.insert(3, 'Quito')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7zH-BXrOQrrZ",
        "outputId": "bb58bcb7-ad4e-4c51-b01e-f22a87ba1f27"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Buenos Aires', 'Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo']\n"
          ]
        }
      ],
      "source": [
        "print(lis)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LQjSha2BQrra"
      },
      "source": [
        "9) Concatenar otra lista a la ya creada"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0Ah7CZfXQrra",
        "outputId": "1d121fc7-7614-496d-c998-540a427d293a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Buenos Aires', 'Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'Bruselas']\n"
          ]
        }
      ],
      "source": [
        "lis.extend(['Madrid','Roma','Bruselas'])\n",
        "print(lis)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2-zTcKDkQrra"
      },
      "source": [
        "10) Encontrar el índice de la ciudad que en el punto 7 agregamos duplicada. ¿Se nota alguna particularidad?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "l1ZGWdSzQrra",
        "outputId": "1753fd58-7b92-433f-b81d-77f04b98949e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "4\n"
          ]
        }
      ],
      "source": [
        "print(lis.index('Montevideo'))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Nr6nHM_eQrra"
      },
      "source": [
        "11) ¿Qué pasa si se busca un elemento que no existe?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZCZ8Y4SgQrrb",
        "outputId": "12d99d78-5019-4e42-d2cb-da3c875f5145"
      },
      "outputs": [
        {
          "ename": "ValueError",
          "evalue": "'París' is not in list",
          "output_type": "error",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_2688/2999708316.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'París'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m: 'París' is not in list"
          ]
        }
      ],
      "source": [
        "print(lis.index('París'))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FO1B_FiWQrrb"
      },
      "source": [
        "12) Eliminar un elemento de la lista"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4qRzOPj2Qrrb"
      },
      "outputs": [],
      "source": [
        "lis.remove('Buenos Aires')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "iAxSKIUCQrrb",
        "outputId": "08d31859-075b-41c2-b013-b039735bf471"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'Bruselas']\n"
          ]
        }
      ],
      "source": [
        "print(lis)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F0nvN2v1Qrrb"
      },
      "source": [
        "13) ¿Qué pasa si el elemento a eliminar no existe?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fo7JSCYTQrrb",
        "outputId": "07743d6c-ad68-488c-bbd1-7f1315886a0c"
      },
      "outputs": [
        {
          "ename": "ValueError",
          "evalue": "list.remove(x): x not in list",
          "output_type": "error",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_2688/2377769693.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mlis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'Buenos Aires'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m: list.remove(x): x not in list"
          ]
        }
      ],
      "source": [
        "lis.remove('Buenos Aires')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Nsnk-YhQQrrc"
      },
      "source": [
        "14) Extraer el úlimo elemento de la lista, guardarlo en una variable e imprimirlo"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0N-qJC4BQrrc",
        "outputId": "cf5b439e-3716-4c0d-b693-882d06dbc918"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Bruselas\n"
          ]
        }
      ],
      "source": [
        "ultimo = lis.pop()\n",
        "print(ultimo)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7VYtNVS2Qrrc"
      },
      "source": [
        "15) Mostrar la lista multiplicada por 4"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oQwahhyiQrrc",
        "outputId": "ffd17db4-cf75-4765-b4d5-49497c991e1a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma']\n"
          ]
        }
      ],
      "source": [
        "print(lis * 4)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yfoQ_MVZQrrc"
      },
      "source": [
        "16) Crear una tupla que contenga los números enteros del 1 al 20"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "m9fJskZnQrrc",
        "outputId": "b7e2a324-62ac-4ba5-d6ed-1766752d1ce7"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'tuple'>\n",
            "(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n"
          ]
        }
      ],
      "source": [
        "tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n",
        "print(type(tup))\n",
        "print(tup)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hjUO70TkQrrd"
      },
      "source": [
        "17) Imprimir desde el índice 10 al 15 de la tupla"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nv8YWUk8Qrrd",
        "outputId": "b5b4ea49-ac00-4a0e-c6a1-b2c7a28fa1cc"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "(11, 12, 13, 14, 15, 16)\n"
          ]
        }
      ],
      "source": [
        "print(tup[10:16])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bN5rl8fGQrrd"
      },
      "source": [
        "18) Evaluar si los números 20 y 30 están dentro de la tupla"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tayWLJELQrrd",
        "outputId": "9b4f08b9-d429-4c99-beee-b83b62a6afd4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "True\n",
            "False\n"
          ]
        }
      ],
      "source": [
        "print(20 in tup)\n",
        "print(30 in tup)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EK-m7LvyQrrd"
      },
      "source": [
        "19) Con la lista creada en el punto 1, validar la existencia del elemento 'París' y si no existe, agregarlo. Utilizar una variable e informar lo sucedido."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aTqSXsWNQrre",
        "outputId": "132f9b67-12f2-436c-b5c2-ae2265373047"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Se insertó el elemento París\n"
          ]
        }
      ],
      "source": [
        "elemento = 'París'\n",
        "if (not(elemento in lis)):\n",
        "    lis.append(elemento)\n",
        "    print('Se insertó el elemento', elemento)\n",
        "else:\n",
        "    print('El elemento', elemento, 'ya existía')\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0Fz9rhq3Qrre"
      },
      "source": [
        "20) Mostrar la cantidad de veces que se encuentra un elemento específico dentro de la tupla y de la lista"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6IuX01DTQrre",
        "outputId": "aedff610-d864-409f-b060-bbe6b2e79ea2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "1\n",
            "2\n"
          ]
        }
      ],
      "source": [
        "print(tup.count(10))\n",
        "print(lis.count('Montevideo'))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AfPGqPWrQrre"
      },
      "source": [
        "21) Convertir la tupla en una lista"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "B2pk3t-YQrrf",
        "outputId": "427db77e-5dfd-47ae-c3f6-be9c6d8753d9"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n"
          ]
        }
      ],
      "source": [
        "lis2=list(tup)\n",
        "print(lis2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P1vFayPCQrrf"
      },
      "source": [
        "22) Desempaquetar solo los primeros 3 elementos de la tupla en 3 variables"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UrChS640Qrrf",
        "outputId": "5451648d-af18-4a40-d4bd-25c76a077100"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "1\n",
            "2\n",
            "3\n"
          ]
        }
      ],
      "source": [
        "v1, v2, v3, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _ = tup\n",
        "print(v1)\n",
        "print(v2)\n",
        "print(v3)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wB5F4EBxQrrf"
      },
      "source": [
        "23) Crear un diccionario utilizando la lista crada en el punto 1, asignandole la clave \"ciudad\". Agregar tambien otras claves, como puede ser \"Pais\" y \"Continente\"."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9kLdkJT1Qrrf"
      },
      "outputs": [],
      "source": [
        "dicc = {  'Ciudad': lis, \n",
        "'País': ['Brasil','Paraguay','Ecuador','Uruguay','Chile','Perú','Venezuela','Colombia','Méjico','Uruguay','España','Italia','Francia'], \n",
        "'Continente' : ['América','América','América','América','América','América','América','América','América','América','Europa','Europa','Europa']}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "v5F0AGSpQrrf",
        "outputId": "c0e8a527-e9a2-4372-c791-a009513b2a9b"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "{'Ciudad': ['Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'París'], 'País': ['Brasil', 'Paraguay', 'Ecuador', 'Uruguay', 'Chile', 'Perú', 'Venezuela', 'Colombia', 'Méjico', 'Uruguay', 'España', 'Italia', 'Francia'], 'Continente': ['América', 'América', 'América', 'América', 'América', 'América', 'América', 'América', 'América', 'América', 'Europa', 'Europa', 'Europa']}\n"
          ]
        }
      ],
      "source": [
        "print(dicc)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JeJV_r9GQrrf"
      },
      "source": [
        "24) Imprimir las claves del diccionario"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QMKrrb5LQrrf",
        "outputId": "298bb389-23a9-4870-bef3-3e1ebdf409e1"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "dict_keys(['Ciudad', 'País', 'Continente'])\n"
          ]
        }
      ],
      "source": [
        "print(dicc.keys())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "itSEeDyNQrrg"
      },
      "source": [
        "25) Imprimir las ciudades a través de su clave"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "wSk9qxmAQrrg",
        "outputId": "f83ef7fb-0611-4cc9-856d-9639f5f43388"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Brasilia', 'Asunción', 'Quito', 'Montevideo', 'Santiago', 'Lima', 'Caracas', 'Bogotá', 'Ciudad de Méjico', 'Montevideo', 'Madrid', 'Roma', 'París']\n"
          ]
        }
      ],
      "source": [
        "print(dicc['Ciudad'])"
      ]
    }
  ],
  "metadata": {
    "interpreter": {
      "hash": "c85384e4cb51c8b72350f3a8712cc8351fdc3955e32a27f9b60c6242ab125f01"
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}